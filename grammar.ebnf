// Dice rolling grammar - generic spec

expr: num

// math and operators, MDAS
num: comparison

comparison: a_num (COMP_OPERATOR a_num)*
COMP_OPERATOR: "<" | ">" | "==" | ">=" | "<=" | "!="

a_num: [a_num A_OP] m_num
A_OP: "+" | "-"

m_num: [m_num M_OP] u_num
M_OP: "*" | "/" | "//" | "%"

u_num: numexpr | U_OP u_num
U_OP: "+" | "-"

// numbers
numexpr: (set | literal) ANNOTATION*

ANNOTATION: /\[.*?\]/

literal: INTEGER | DECIMAL

set: setexpr set_op*

set_op: OPERATOR selector
OPERATOR: "k" | "mi" | "ma" | "p"

setexpr: "(" [num ("," num)*] ")"
       | dice

// dice
dice: diceexpr dice_op*

dice_op: DICE_OPERATOR selector
DICE_OPERATOR: OPERATOR | "rr" | "ro" | "ra" | "e"

diceexpr: INTEGER? "d" INTEGER

selector: SELTYPE? INTEGER

SELTYPE: "l" | "h" | "<" | ">"

// useful constants
INTEGER: ("0".."9")+
DECIMAL: INTEGER "." INTEGER? | "." INTEGER
// TODO: ignore whitespace