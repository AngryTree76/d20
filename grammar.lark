// Dice rolling grammar - Avrae spec

expr: num COMMENT?

// comments are given -1 priority - only match comment if no other possibilities
COMMENT.-1: /.+/

// math and operators, MDAS
?num: comparison | par_num
par_num: "(" num ")"

?comparison: [comparison COMP_OPERATOR] a_num
COMP_OPERATOR: "<" | ">" | "==" | ">=" | "<=" | "!="

?a_num: [a_num A_OP] m_num
A_OP: "+" | "-"

?m_num: [m_num M_OP] u_num
M_OP: "*" | "/" | "//" | "%"

?u_num: numexpr | U_OP u_num
U_OP: "+" | "-"

// numbers
?numexpr: (dice | set | literal) ANNOTATION*

ANNOTATION: /\[.*?\]/

literal: INTEGER | DECIMAL

// sets
?set: setexpr set_op*

set_op: OPERATOR selector
OPERATOR: "k" | "p"

setexpr: "()"
       | "(" num "," ")"
       | "(" [num ("," num)+ ","?] ")"

// dice
?dice: diceexpr dice_op*

dice_op: DICE_OPERATOR selector
DICE_OPERATOR: OPERATOR | "rr" | "ro" | "ra" | "e" | "mi" | "ma"

diceexpr: INTEGER? "d" INTEGER

selector: SELTYPE? INTEGER

SELTYPE: "l" | "h" | "<" | ">"

// useful constants
%import common.WS
%import common.INT -> INTEGER
%import common.DECIMAL
%ignore WS